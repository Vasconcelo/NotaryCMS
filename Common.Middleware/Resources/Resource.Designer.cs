//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.Middleware.Resources {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///    A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        internal Resource() {
        }
        
        /// <summary>
        ///    Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Common.Middleware.Resources.Resource", typeof(Resource).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///    Overrides the current thread's CurrentUICulture property for all
        ///    resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Api key &apos;{0}&apos; failed to authenticate. Key has expired..
        /// </summary>
        public static string ApiKeyExpired {
            get {
                return ResourceManager.GetString("ApiKeyExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid api key..
        /// </summary>
        public static string ApiKeyInvalid {
            get {
                return ResourceManager.GetString("ApiKeyInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Api key &apos;{0}&apos; failed to authenticate. Key is not active..
        /// </summary>
        public static string ApiKeyNotActive {
            get {
                return ResourceManager.GetString("ApiKeyNotActive", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Api key &apos;{0}&apos; failed to authenticate. Key was not found..
        /// </summary>
        public static string ApiKeyNotFound {
            get {
                return ResourceManager.GetString("ApiKeyNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Api key &apos;{0}&apos; failed to authenticate. Failed to parse api key guid..
        /// </summary>
        public static string ApiKeyParseFailed {
            get {
                return ResourceManager.GetString("ApiKeyParseFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The application specific user id was not provided..
        /// </summary>
        public static string AppUserIdNotProvided {
            get {
                return ResourceManager.GetString("AppUserIdNotProvided", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Authentication failed..
        /// </summary>
        public static string AuthenticationFailed {
            get {
                return ResourceManager.GetString("AuthenticationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot read the token..
        /// </summary>
        public static string CannotReadToken {
            get {
                return ResourceManager.GetString("CannotReadToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The client application cannot be verified..
        /// </summary>
        public static string ClientAppUnverified {
            get {
                return ResourceManager.GetString("ClientAppUnverified", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid or missing authentication token or api key..
        /// </summary>
        public static string InvalidToken {
            get {
                return ResourceManager.GetString("InvalidToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid key signature..
        /// </summary>
        public static string KeySignatureInvalid {
            get {
                return ResourceManager.GetString("KeySignatureInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The nna-date header is missing, or the date is invalid..
        /// </summary>
        public static string NnaDateMissingOrInvalid {
            get {
                return ResourceManager.GetString("NnaDateMissingOrInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Signature does not match..
        /// </summary>
        public static string SignatureNotMatch {
            get {
                return ResourceManager.GetString("SignatureNotMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The token has expired..
        /// </summary>
        public static string TokenExpired {
            get {
                return ResourceManager.GetString("TokenExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The security token must be issued by a participating identity provider..
        /// </summary>
        public static string TokenIssuedByParticipatingIP {
            get {
                return ResourceManager.GetString("TokenIssuedByParticipatingIP", resourceCulture);
            }
        }
    }
}
